name: Generate Diff and Data Dict
on:
  workflow_dispatch:
    inputs:
      prev-branch:
        description: "Previous Branch/Tag"
        required: false
        default: "main"
  push:
    branches-ignore:
      - "main"
    paths:
      - Deliverables/UML/USDM_UML.xmi
      - Deliverables/CT/USDM_CT.xlsx
      - Deliverables/API/USDM_API.json
jobs:
  Diff_And_Data_Dict:
    name: Generate Diff and Data Dict
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Set prev-branch to main for automated workflows
        id: prev-branch
        run: |
          USER_INPUT=${{ inputs.prev-branch }}
          echo "value=${USER_INPUT:-"main"}" >> "$GITHUB_OUTPUT"
      - name: Checkout selected or current branch to currentRelease dir
        uses: actions/checkout@v4
        with:
          path: currentRelease
      - name: Checkout specified or main branch to prevRelease dir
        uses: actions/checkout@v4
        with:
          path: prevRelease
          ref: ${{ steps.prev-branch.outputs.value }}
      - name: Checkout the usdm dictionary generator to usdm-dictionary-generator dir
        uses: actions/checkout@v4
        with:
          repository: cdisc-org/usdm-dictionary-generator
          path: usdm-dictionary-generator
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "maven"
      - name: Install Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: 3.9.5
      - name: Install XML Starlet
        run: sudo apt-get install -y xmlstarlet
      - name: Get the previous and current version numbers
        run: |
          echo "PREVIOUS_VERSION=$(jq -r '.info.version' prevRelease/Deliverables/API/USDM_API.json | cut -d ' ' -f1 | tr . -)" >> $GITHUB_ENV
          echo "CURRENT_VERSION=${GITHUB_REF_NAME//release-/}" >> $GITHUB_ENV
          echo "CURRENT_API_VERSION=$(jq -r '.info.version' currentRelease/Deliverables/API/USDM_API.json | cut -d ' ' -f1 | tr . -)" >> $GITHUB_ENV
          echo "CURRENT_UML_VERSION=$(xmlstarlet sel -t -v '//diagram/properties[@name="USDM" and @type="Logical"]/../project/@version' currentRelease/Deliverables/UML/USDM_UML.xmi | cut -d ' ' -f1 | tr . -)" >> $GITHUB_ENV
      - name: Fail due to unexpected version numbers
        if: ${{ !(contains(env.PREVIOUS_VERSION,'-') && contains(env.CURRENT_VERSION,'-') && contains(env.CURRENT_API_VERSION,'-') && contains(env.CURRENT_UML_VERSION,'-') && env.PREVIOUS_VERSION != env.CURRENT_VERSION && env.CURRENT_API_VERSION == env.CURRENT_VERSION && startsWith(env.CURRENT_VERSION, env.CURRENT_UML_VERSION))}}
        run: |
          echo "Previous and current version numbers are not as expected!"
          echo "- PREVIOUS_VERSION comes from the info/version value in USDM_API.json in the previous branch"
          echo "- CURRENT_VERSION comes from the name of the current branch"
          echo "- CURRENT_API_VERSION comes from the info/version value in USDM_API.json in the current branch"
          echo "- CURRENT_UML_VERSION comes from the version property of the UML diagram called 'USDM'"
          echo "Dots in any extracted version numbers are changed to hyphens, and it is expected that:"
          echo "- A value is found for every version number"
          echo "- PREVIOUS_VERSION and CURRENT_VERSION are different"
          echo "- CURRENT_API_VERSION is the same as CURRENT_VERSION"
          echo "- The value of CURRENT_UML_VERSION is found at the start of CURRENT_VERSION"
          exit 1
      - name: Copy the files needed by the usdm dictionary generator
        run: |
          cp prevRelease/Deliverables/UML/USDM_UML.xmi usdm-dictionary-generator/src/main/resources/prevRelease/.
          cp currentRelease/Deliverables/UML/USDM_UML.xmi usdm-dictionary-generator/src/main/resources/currentRelease/.
          cp currentRelease/Deliverables/CT/USDM_CT.xlsx usdm-dictionary-generator/src/main/resources/.
          cp currentRelease/Deliverables/API/USDM_API.json usdm-dictionary-generator/src/main/resources/.
      - name: Compile and run the usdm dictionary generator
        run: |
          cd usdm-dictionary-generator
          mvn compile
          mvn exec:java -Dexec.mainClass="org.cdisc.tools.GeneratorApp" -Dexec.args="--compare-releases"
          mvn exec:java -Dexec.mainClass="org.cdisc.tools.GeneratorApp" -Dexec.args="--gen-table"
          mvn exec:java -Dexec.mainClass="org.cdisc.tools.GeneratorApp" -Dexec.args="--gen-structure"
          mvn exec:java -Dexec.mainClass="org.cdisc.tools.GeneratorApp" -Dexec.args="--gen-alignment"
          cd ../
      - name: Copy and rename the generated dataDictionary to the current branch
        run: cp usdm-dictionary-generator/dataDictionary.MD "currentRelease/Deliverables/UML/."
      - name: Copy and rename the generated diff to the current branch
        run: cp usdm-dictionary-generator/UML_DELTA.csv "currentRelease/Deliverables/UML/UML_DELTA_${{ env.PREVIOUS_VERSION}}_${{ env.CURRENT_VERSION}}.csv"
      - name: Copy and rename the generated dataStructure to the current branch
        run: cp usdm-dictionary-generator/dataStructure.yml "currentRelease/Deliverables/UML/."
      - name: Copy and rename the generated alignments to the current branch
        run: cp usdm-dictionary-generator/alignment.csv "currentRelease/Deliverables/UML/."
      - name: Commit and push the new files to the current branch
        run: |
          cd currentRelease
          git config user.name github-actions
          git config user.email github-actions@cdisc.org
          git add .
          git diff-index --quiet HEAD || git commit -m "Generate Diff and Data Dict"
          git push

# Running locally:
# gh act workflow_dispatch -P ubuntu-latest=catthehacker/ubuntu:act-latest --secret-file ../DDF-RA-Actions/my.secrets
